/**
 *
 */
package com.ds.tools.data.generator.client;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.stream.Collectors;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import com.ds.tools.data.generator.core.Defaults;

/**
 *
 * @author <a href="https://github.com/Sarvesh-D/">Sarvesh Dubey</a>
 * @since 23 Jun 2018
 * @version 1.0
 */
@RunWith(JUnit4.class)
public class NumbersTest {

    @Test
    public void test45NumbersGeneratedWithLength5() {
        final List<Number> numbers = new Numbers().integers()
                                                  .length(5)
                                                  .quantity(45)
                                                  .generate()
                                                  .collect(Collectors.toList());

        assertEquals("Exactly 45 Numbers should be generated", 45, numbers.size());
        assertTrue("No numbers generated", numbers.size() > 0);
        assertTrue("All numbers should have length of 5", numbers.stream()
                                                                 .map(Number::toString)
                                                                 .filter(num -> num.length() == 5)
                                                                 .count() == numbers.size());
    }

    @Test
    public void testDefaultNumbers() {
        final List<Number> numbers = new Numbers().generate()
                                                  .collect(Collectors.toList());
        assertTrue("No numbers generated", numbers.size() > 0);
        assertTrue(Defaults.DEFAULT_QUANTITY + " Numbers should be generated by default", numbers.size() == Defaults.DEFAULT_QUANTITY);
        assertTrue("All Numbers should have length " + Defaults.DEFAULT_LENGTH + " by default", numbers.stream()
                                                                                                       .map(Number::toString)
                                                                                                       .filter(s -> s.length() == Defaults.DEFAULT_LENGTH)
                                                                                                       .count() == numbers.size());

    }

}
